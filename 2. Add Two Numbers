/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        vector <int> v;
        int c=0;
        ListNode *ptr1=l1;
        ListNode *ptr2=l2;
        ListNode *head=new ListNode(0);
        while(ptr1 != NULL || ptr2 != NULL)
        {
            int sum=c;
            if(ptr1!=NULL)
            {
                sum+=ptr1->val;
                ptr1=ptr1->next;
            }
            if(ptr2!=NULL)
            {
                sum+=ptr2->val;
                ptr2=ptr2->next;
            }
            if(sum>=10){
                v.push_back(sum%10);
                c=1;
            }
            else{
                v.push_back(sum);
                c=0;
            }
        }
        if(c==1)
            v.push_back(c);
        ListNode *temp=head;
        for(int i=0; i<v.size(); i++)
        {
            if(i<v.size()-1)
            {
                ListNode *ptr=new ListNode(0);
                temp->val=v[i];
                temp->next=ptr;
                temp=temp->next;
            }
            else
            {
                temp->val=v[v.size()-1];
                temp->next=NULL;
            }
        }
        return head;
    }
};
